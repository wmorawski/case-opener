{
  "extends": ["rxjs-tslint-rules", "tslint-etc"],
  "rulesDirectory": [
    "node_modules/codelyzer",
    "node_modules/tslint-eslint-rules/dist/rules",
    "node_modules/tslint-consistent-codestyle/rules"
  ],
  "rules": {
    "adjacent-overload-signatures": true,
    "angular-whitespace": false,
    "array-type": [true, "array-simple"],
    "arrow-return-shorthand": true,
    "await-promise": true,
    "ban-types": [true, ["Object", "Use {} instead"], ["String"]],
    "ban": [
      true,
      "alert",
      "confirm",
      "prompt",
      {
        "name": ["*", "markForCheck"],
        "message": "Use `.detectChanges()` instead or refactor your component data flow"
      },
      {
        "name": ["*", "bypassSecurityTrustHtml"],
        "message": "Before use contact other team members to avoid potential XSS vulnerability"
      },
      {
        "name": ["*", "bypassSecurityTrustStyle"],
        "message": "Before use contact other team members to avoid potential XSS vulnerability"
      },
      {
        "name": ["*", "bypassSecurityTrustScript"],
        "message": "Before use contact other team members to avoid potential XSS vulnerability"
      },
      {
        "name": ["*", "bypassSecurityTrustUrl"],
        "message": "Before use contact other team members to avoid potential XSS vulnerability"
      },
      {
        "name": ["*", "bypassSecurityTrustResourceUrl"],
        "message": "Before use contact other team members to avoid potential XSS vulnerability"
      },
      {
        "name": "HostListener",
        "message": "Use `host` property of `@Component` and `@Directive` instead"
      },
      {
        "name": "HostBinding",
        "message": "Use `host` property of `@Component` and `@Directive` instead"
      },
      {
        "name": "$",
        "message": "Don't use jQuery please, it's 2018 now. Use angular template engine or native JS functions to control the DOM."
      },
      {
        "name": "jQuery",
        "message": "Don't use jQuery please, it's 2018 now. Use angular template engine or native JS functions to control the DOM."
      },
      {
        "name": "assign",
        "message": "Use `{ ...obj1, ...obj2 }` spread operator instead"
      },
      {
        "name": "clone",
        "message": "Use `{ ...obj1 }` spread operator instead"
      },
      {
        "name": "concat",
        "message": "Use `Array#concat` instead"
      },
      {
        "name": "each",
        "message": "Use `Array#forEach` instead"
      },
      {
        "name": "findIndex",
        "message": "Use `Array#findIndex` instead"
      },
      {
        "name": "forEach",
        "message": "Use `Array#forEach` instead"
      },
      {
        "name": "get",
        "message": "_.get doesn't have type safety"
      },
      {
        "name": "has",
        "message": "_.has doesn't have type safety"
      },
      {
        "name": "includes",
        "message": "Use `Array#includes` instead"
      },
      {
        "name": "indexOf",
        "message": "Use `Array#indexOf` instead"
      },
      {
        "name": "isArray",
        "message": "Use `Array.isArray(x)` instead"
      },
      {
        "name": "isNull",
        "message": "Use `x === null` instead"
      },
      {
        "name": "isUndefined",
        "message": "Use `x === undefined` instead"
      },
      {
        "name": "join",
        "message": "Use `Array#join` instead"
      },
      {
        "name": "lowerCase",
        "message": "Use `String#toLowerCase` instead"
      },
      {
        "name": "mapKeys",
        "message": "Use `Object.keys(data).map(key => ...)` instead"
      },
      {
        "name": "reduce",
        "message": "Use `Array#reduce` instead"
      },
      {
        "name": "slice",
        "message": "Use `Array#slice` instead"
      },
      {
        "name": "some",
        "message": "Use `Array#some` instead"
      }
    ],
    "template-banana-in-box": true,
    "callable-types": true,
    "class-name": true,
    "comment-format": [true, "check-space"],
    "component-class-suffix": true,
    "component-selector": [
      true,
      "element",
      ["te"],
      "kebab-case"
    ],
    "contextual-lifecycle": true,
    "curly": false,
    "directive-class-suffix": true,
    "directive-selector": [
      true,
      "attribute",
      ["te"],
      "camelCase"
    ],
    "eofline": false,
    "forin": true,
    "import-blacklist": [true, "rxjs/Rx", "rx"],
    "import-spacing": false,
    "indent": false,
    "interface-over-type-literal": false,
    "label-position": true,
    "max-line-length": false,
    "member-access": [true, "check-accessor", "check-parameter-property"],
    "member-ordering": [
      true,
      {
        "order": [
          "public-static-field",
          "public-static-method",
          "protected-static-field",
          "protected-static-method",
          "private-static-field",
          "private-static-method",
          "public-instance-field",
          "protected-instance-field",
          "private-instance-field",
          "public-constructor",
          "protected-constructor",
          "private-constructor",
          "public-instance-method",
          "protected-instance-method",
          "private-instance-method"
        ]
      }
    ],
    "no-arg": true,
    "no-as-type-assertion": true,
    "no-attribute-decorator": true,
    "no-bitwise": true,
    "no-conditional-assignment": true,
    "no-consecutive-blank-lines": false,
    "no-console": [true, "debug", "log", "info", "time", "timeEnd", "trace"],
    "no-constant-condition": true,
    "no-construct": true,
    "no-debugger": true,
    "no-default-export": true,
    "no-duplicate-imports": true,
    "no-duplicate-super": true,
    "no-duplicate-switch-case": true,
    "no-duplicate-variable": true,
    "no-dynamic-delete": true,
    "no-empty-interface": true,
    "no-empty": true,
    "no-eval": true,
    "no-extra-boolean-cast": true,
    "no-floating-promises": false,
    "no-for-in-array": true,
    "no-forward-ref": true,
    "no-import-side-effect": true,
    "no-inferrable-types": [true, "ignore-params", "ignore-properties"],
    "no-inner-declarations": true,
    "no-input-rename": false,
    "no-internal-module": true,
    "no-invalid-this": true,
    "no-magic-numbers": false,
    "no-misused-new": true,
    "no-non-null-assertion": false,
    "no-output-on-prefix": true,
    "no-output-rename": true,
    "no-parameter-reassignment": true,
    "no-return-await": true,
    "no-shadowed-variable": true,
    "no-string-literal": false,
    "no-string-throw": true,
    "no-switch-case-fall-through": true,
    "no-trailing-whitespace": false,
    "no-unnecessary-type-assertion": false,
    "no-unused-expression": true,
    "no-unused-declaration": {
      "options": [
        {
          "imports": true,
          "declarations": false,
          "ignored": {}
        }
      ],
      "severity": "error"
    },
    "no-use-before-declare": true,
    "no-var-keyword": true,
    "no-var-requires": false,
    "object-literal-sort-keys": false,
    "one-line": false,
    "ordered-imports": [
      true,
      {
        "grouped-imports": true,
        "groups": [
          {
            "name": "Angular",
            "match": ["^@angular"],
            "order": 1
          },
          {
            "name": "External libs",
            "match": ["^(?!@recruitee)(?!\\.)"],
            "order": 2
          },
          {
            "name": "Internal libs",
            "match": ["^@recruitee"],
            "order": 3
          },
          {
            "name": "Internal",
            "match": ["^\\."],
            "order": 4
          }
        ]
      }
    ],
    "no-pipe-impure": true,
    "pipe-naming": [true, "camelCase", "rt"],
    "prefer-const": true,
    "prefer-method-signature": true,
    "prefer-object-spread": true,
    "promise-function-async": false,
    "quotemark": false,
    "radix": true,
    "semicolon": false,
    "space-before-function-paren": false,
    "strict-boolean-expressions": false,
    "switch-default": true,
    "template-no-negated-async": true,
    "template-use-track-by-function": true,
    "triple-equals": [true, "allow-null-check", "allow-undefined-check"],
    "typedef-whitespace": false,
    "typedef": false,
    "unified-signatures": true,
    "no-host-metadata-property": false,
    "no-inputs-metadata-property": true,
    "use-lifecycle-interface": false,
    "no-outputs-metadata-property": true,
    "use-pipe-transform-interface": true,
    "use-component-view-encapsulation": true,
    "valid-typeof": true,
    "variable-name": false,
    "whitespace": false,
    "nx-enforce-module-boundaries": [
      true,
      {
        "allow": [
          "@recruitee/user-interface/locales",
          "@recruitee/user-interface/src/lib/*",
          "@recruitee/components/authorization",
          "@recruitee/components/tutorial-dialog",
          "@recruitee/components/candidate-questions"
        ],
        "depConstraints": [
          {
            "sourceTag": "*",
            "onlyDependOnLibsWithTags": ["*"]
          }
        ]
      }
    ]
  }
}
